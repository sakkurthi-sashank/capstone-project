.super Ljava/lang/Object;

# Direct method to detect USB Debugging status
.method public static detectUSBDebugging(Landroid/content/Context;)V
    .locals 5

    # Key for ADB setting
    const-string v0, "adb_enabled"

    # Get ContentResolver
    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
    move-result-object v1

    # Default value if not found
    const/4 v2, 0x0

    # Retrieve ADB_ENABLED value
    invoke-static {v1, v0, v2}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
    move-result v3

    # Check if ADB is enabled
    const/4 v4, 0x1
    if-eq v3, v4, :adb_enabled

    # USB Debugging is disabled
    const-string v0, "USB Debugger: Disabled"
    goto :show_toast

    :adb_enabled
    # USB Debugging is enabled
    const-string v0, "USB Debugger: Enabled"

    :show_toast
    # Create and show Toast message
    const/4 v2, 0x1  # Toast.LENGTH_SHORT
    invoke-static {p0, v0, v2}, Landroid/widget/Toast;->makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;
    move-result-object v1
    invoke-virtual {v1}, Landroid/widget/Toast;->show()V

    return-void
.end method
